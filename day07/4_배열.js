/*
  - 변수/상수 : 데이터 1개 저장할수 있는 공간/메모리/상자
  - JS데이터 종류
    1. 문자   : " " , ' ' , ` ` 
    2. 숫자   : 7 , -10 , 10.5 
    3. 불리언 : true , false 
    4. 배열   : [ 데이터1 , 데이터2 , 데이터3 ~ ]

  - 배열 
    - 순서대로 번호가 붙은 데이터들이 연속적인 형태로 구성된 구조
    - 인덱스/순서대로 번호 : 중복된 데이터를 식별하기 위해서 
    - 예) 
      사과박스 = [ 사과 , 사과 , 사과 , 사과 ]
                    0     1      2     3 
      사과총개수 = 4개

      - 인덱스 : 0번부터 시작 
    1. 배열 : [ ] 대괄호 이용한 여러개 데이터를 묶은 데이터 
        [ 데이터 , 데이터 , 데이터 , 데이터 ]

    2. 인덱스번호 : 0번부터 시작 , 개수/길이/n -1 까지 

    3. 배열 선언과 변수의 대입 
      let 변수명 = [ 데이터1 , 데이터2 , 데이터3 ]
    
    4. 배열 호출 
      1. 전체 호출 : 
        변수명 
      2. 특정 데이터 호출 : 
        변수명[인덱스번호]

    5. 배열 수정 
      1. 전체 수정 : 
        변수명 = [ 새로운 배열 ]
      2. 특정 인덱스내 데이터 수정 : 
        변수명[인덱스번호] = 새로운데이터
      
    6. 배열내 데이터 추가 
      변수명.push( 데이터 )

    7. 배열내 특정 데이터 삭제 / 중간삽입 
      1. 변수명.splice( 인덱스 , 1 )                  : 특정인덱스를 1개 삭제한다. ( 한칸씩 당겨진다.)
      2. 변수명.splice( 인덱스 , 0 , '새로운데이터' )   : 특정인덱스에 새로운데이터 삽입한다. ( 한칸씩 밀려남.)

    8. 배열내 특정 데이터의 인덱스 찾기 
      변수명.indexOf( 찾을데이터 )                    : 만약에 찾을데이터가 배열내 존재하면 위치/인덱스 반환 , 없으면 -1

*/

// 1. 배열 만들기 = 데이터 여러개 저장하기 
[ '사과' , '사과' , '사과' ]

// 2. 선언된 배열 출력 
console.log( [ '사과' , '사과' , '사과' ] )

// 3. 배열을 변수/상수 저장 
let 과일상자변수 = [ '사과' , '바나나' , '포도']

// 4. 배열을 가지고 있는 변수내 배열 호출
console.log( 과일상자변수 );    // ['사과', '바나나', '포도']

// 4-2 배열이 가지고 있는 특정 위치의 데이터 호출 
console.log( 과일상자변수[0] ); // 변수명[인덱스번호]  ===>  '사과'
console.log( 과일상자변수[1] ); // ===> '바나나'
console.log( 과일상자변수[2] ); // ===> '포도'
console.log( 과일상자변수[3] ); // ===> undefined  , 없는 위치/인덱스 이기 때문에 

// 5. 배열 수정 
  // 변수명 = 새로운배열 
과일상자변수 = [ '사과' , '바나나' ];     console.log( 과일상자변수 ); // ['사과', '바나나' ]
// 5-2 배열내 특정 인덱스내 데이터만 수정 
  // 변수명[인덱스번호] = 새로운데이터
과일상자변수[2] = '포도';                 console.log( 과일상자변수 ); // ['사과', '바나나','포도' ]

// 6. 배열에 요소/데이터 추가 
  // 변수명.push( 데이터 );
과일상자변수.push( '체리' );              console.log( 과일상자변수 ); // ['사과', '바나나','포도', '체리' ]

// 7. 배열에 요소/데이터 삭제
  // 변수명.splice( 삭제할인덱스 , 삭제할개수 )
과일상자변수.splice( 0 , 1 );           console.log( 과일상자변수 );  // '사과' 삭제후 ['바나나', '포도', '체리']
과일상자변수.splice( 1 , 0 , '수박' );  console.log( 과일상자변수 ); // ['바나나', '수박', '포도', '체리']

// 8. 데이터의 인덱스 찾기 
  // 변수명.indexOf('찾을데이터' )      : 있으면 인덱스 호출( 0 ~ ) 없으면 -1
console.log( 과일상자변수.indexOf('포도') ); // 3번째 존재 ==> 인덱스 : 2
  // 활용
let 삭제할인덱스 = 과일상자변수.indexOf('포도'); // 2 => 반환된 2를 '삭제할인덱스' 변수에 저장된다. 
과일상자변수.splice( 삭제할인덱스 , 1 );    //  과일상자변수.splice( 2 , 1 );
console.log( 과일상자변수 );              //  ['바나나', '수박', '체리']

























