/*
  - 개발 순서
    0. 요구사항 작성( 영업부 )
    1. 요구사항 분석( 기획부 )
    2. 설계( 개발부 )
    3. 구현( 개발부 )
    4. 테스트( 테스트팀 )
    5. 유지보수( 유지보수팀 )
    6. 배포( 서버팀 )
  - 사회경험 필요 : 요구사항 작성 > 요구사항 분석 > 설계
  - 프로그래밍 문법 필요 : 구현>테스트>유지보수
  - JS 메모리
    변수: 하나의 데이터/자료 저장, 수정 가능 
    상수: 하나의 데이터/자료 저장, 수정 불가능
  - JS 데이터/자료
    1. 문자 2.숫자 3.논리 4.undefined 5.[ ] 6. function
    - [ ] 배열 
      : 여러개의 데이터/자료 를 저장할수 있는 하나의 데이터/자료
    - function 함수 
      : 여러개의 실행문/코드(;) 들을 묶어서 하나의 데이터/자료

  - 변수와 데이터 관계 
    [ 선언과 초기값 대입 ]
    let 변수 = "안녕";  let 변수 = 3; let 변수 = true;
    let 변수 = [ "안녕" , 3 , true ]
    let 변수 = function (){ }

  - 실습을 통해 활용
    실습예) 게시판을 만드는데 제목 , 내용 , 비밀번호 필요하다
          만일 2개의 게시물이 존재할경우 변수의 설계 정의해보자.
          '제목1' '내용1' '1234'
          '제목2' '내용2' '4567'
      1. 변수만 사용할경우
      let title = '제목1' , let content = '내용1' , let password = '1234'
      let title = '제목2' , let content = '내용2' , let password = '4567'
      - 변수의수 :  게시물수 * 3
      - 단점 : 게시물수가 많아질수록 변수가 많아지면 관리가 힘들다.
      2. 배열 사용
      let title = [ "제목1","제목2" ]
      let content = [ "내용1" , "내용2" ]
      let password = [ "1234" , "4567" ]
      - 배열의수 : 타입/필드 수
      - 단점 : 필수수가 많아질수록 배열변수가 많아지므로 관리가 힘들다.
      3. 배열2 사용
      let boardList = [ "제목1,내용1,1234","제목2,내용2,4567", ]
      - 게시물 당 하나의 " " 처리해서 여러개 게시물(문자열) 배열에 저장 
      - 단점 : 게시물의 정보/필드 출력시 split(분류) 분리 해야 되므로 분류 순서 일치하고 관리가 힘들다.

      - 모든 단점 해결하고자 나온 문법 : 객체지향 프로그래밍 
      

*/